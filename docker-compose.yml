services:
  postgres:
    image: postgres:15-alpine
    container_name: sbd_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sbd_inventory
      POSTGRES_USER: sbd_user
      POSTGRES_PASSWORD: sbd_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./docker/postgres/init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - sbd_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sbd_user -d sbd_inventory"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üîß pgAdmin - Database Administration Tool (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sbd_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sbd.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - sbd_network
    depends_on:
      postgres:
        condition: service_healthy

  # üöÄ SBD Application (Optional - for future use)
  # sbd_app:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: sbd_app
  #   restart: unless-stopped
  #   environment:
  #     NODE_ENV: production
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_NAME: sbd_inventory
  #     DB_USER: sbd_user
  #     DB_PASSWORD: sbd_password
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   networks:
  #     - sbd_network
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

# üì¶ Named Volumes for Data Persistence
volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

# üåê Custom Network
networks:
  sbd_network:
    driver: bridge 